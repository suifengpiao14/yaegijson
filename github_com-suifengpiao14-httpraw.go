// Code generated by 'yaegi extract github.com/suifengpiao14/httpraw'. DO NOT EDIT.

package yaegijson

import (
	"github.com/suifengpiao14/httpraw"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/suifengpiao14/httpraw/httpraw"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"BuildRequest":             reflect.ValueOf(httpraw.BuildRequest),
		"CURL_TIMEOUT":             reflect.ValueOf(&httpraw.CURL_TIMEOUT).Elem(),
		"DestructReqeust":          reflect.ValueOf(httpraw.DestructReqeust),
		"FomrmatHttpRaw":           reflect.ValueOf(httpraw.FomrmatHttpRaw),
		"HTTP_HEAD_BODY_DELIM":     reflect.ValueOf(constant.MakeFromLiteral("\"\\r\\n\\r\\n\"", token.STRING, 0)),
		"Http_header_Content_Type": reflect.ValueOf(constant.MakeFromLiteral("\"Content-Length\"", token.STRING, 0)),
		"Linux_EOF":                reflect.ValueOf(constant.MakeFromLiteral("\"\\n\"", token.STRING, 0)),
		"NewTransport":             reflect.ValueOf(httpraw.NewTransport),
		"ParseResponse":            reflect.ValueOf(httpraw.ParseResponse),
		"ReadRequest":              reflect.ValueOf(httpraw.ReadRequest),
		"RestyRequestFn":           reflect.ValueOf(httpraw.RestyRequestFn),
		"Window_EOF":               reflect.ValueOf(constant.MakeFromLiteral("\"\\r\\n\"", token.STRING, 0)),

		// type definitions
		"HttpTpl":         reflect.ValueOf((*httpraw.HttpTpl)(nil)),
		"RequestDTO":      reflect.ValueOf((*httpraw.RequestDTO)(nil)),
		"RequestFn":       reflect.ValueOf((*httpraw.RequestFn)(nil)),
		"ResponseDTO":     reflect.ValueOf((*httpraw.ResponseDTO)(nil)),
		"TransportConfig": reflect.ValueOf((*httpraw.TransportConfig)(nil)),
	}
}
